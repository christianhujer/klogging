project_name: klogging

containers:
  build-env:
    image: eclipse-temurin:19.0.2_7-jdk@sha256:f6b5cf2467413076b72bfb0a850c9ca942bbcf32fb642027a7b22b1187fac927
    volumes:
      - local: .
        container: /code
        options: cached
      - type: cache
        name: gradle-cache
        container: /home/container-user/.gradle
    working_directory: /code
    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user

tasks:
  build:
    description: Build the library.
    run:
      container: build-env
      command: ./gradlew assemble --info

  check:
    description: Run the unit tests and static analysis tools.
    run:
      container: build-env
      # Explicit `jvmTest` so XML files are generated.
      command: ./gradlew jvmTest

  build-all-platform-targets:
    run:
      container: build-env
      command: ./gradlew build

  continuousCheck:
    description: Run 'check' and then re-run when any code changes are detected.
    run:
      container: build-env
      environment:
        KLOGGING_MIN_LOG_LEVEL: WARN
      command: ./gradlew check

  spotlessApply:
    description: Fix code formatting issues identified by Spotless.
    run:
      container: build-env
      command: ./gradlew spotlessApply

  shell:
    description: Start a shell in the development environment.
    run:
      container: build-env
      command: bash

  outdated:
    description: Check for outdated dependencies.
    run:
      container: build-env
      command: ./gradlew dependencyUpdates -Drevision=release

  generateCodeCoverageReport:
    description: Generate a code coverage report based on a previous test run.
    run:
      container: build-env
      command: ./gradlew jacocoTestReport

  publishRelease:
    description: Publish the library to Sonatype's Open Source Software Repository Hosting (OSSRH), which will be synced to Maven Central.
    run:
      container: build-env
      command: ./gradlew publishRelease
      environment:
        OSSRH_USERNAME: $OSSRH_USERNAME
        OSSRH_PASSWORD: $OSSRH_PASSWORD
        SIGNING_KEY_ID: $SIGNING_KEY_ID # Run `gpg -K` to get this, take last eight characters
        SIGNING_KEY: $SIGNING_KEY # Run `gpg --export-secret-keys <ID> --armor` to get this
        SIGNING_PASSWORD: $SIGNING_PASSWORD

  publishSnapshot:
    description: Publish the library to Sonatype's Open Source Software Repository Hosting (OSSRH), which will be synced to Maven Central.
    run:
      container: build-env
      command: ./gradlew publishSnapshot
      environment:
        OSSRH_USERNAME: $OSSRH_USERNAME
        OSSRH_PASSWORD: $OSSRH_PASSWORD
        SIGNING_KEY_ID: $SIGNING_KEY_ID # Run `gpg -K` to get this, take last eight characters
        SIGNING_KEY: $SIGNING_KEY # Run `gpg --export-secret-keys <ID> | base64` to get this
        SIGNING_PASSWORD: $SIGNING_PASSWORD

  assembleRelease:
    description: Assemble the files that would be published to a repository.
    run:
      container: build-env
      command: ./gradlew assembleRelease
      environment:
        SIGNING_KEY_ID: $SIGNING_KEY_ID # Run `gpg -K` to get this, take last eight characters
        SIGNING_KEY: $SIGNING_KEY # Run `gpg --export-secret-keys <ID> | base64` to get this
        SIGNING_PASSWORD: $SIGNING_PASSWORD
